version: '3.7'

services:
  # App backend service
  server:
    # Configuration for building the docker image for the backend service
    build:
      context: memorypond-web # Use an image built from the specified dockerfile in the `polling-app-server` directory.
      dockerfile: Dockerfile
      args:
        SPRING_PROFILE: develop
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on:
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/memorypond?autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: memorypond
      SPRING_DATASOURCE_PASSWORD: memorypond

  # Database Service (Mysql)
  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: memorypond
      MYSQL_DATABASE: memorypond
      MYSQL_USER: memorypond
      MYSQL_PASSWORD: memorypond
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/config:/etc/mysql/conf.d

  grafana:
    image: grafana/grafana:5.4.3
    ports:
      - 3000:3000
    volumes:
      - ./docker/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      monitoring:
        aliases:
          - grafana

  prometheus:
    image: prom/prometheus:v2.6.1
    ports:
      - 9090:9090
    command:
      - '--config.file=/config/prometheus/prometheus.yml'
    volumes:
      - ./docker/prometheus/config/prometheus.yml:/config/prometheus/prometheus.yml
      - ./docker/prometheus:/prometheus
    networks:
      monitoring:
        aliases:
            - prometheus

networks:
  monitoring:

# Volumes
volumes:
  db-data:
